<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="taskDataSet" targetNamespace="http://tempuri.org/taskDataSet.xsd" xmlns:mstns="http://tempuri.org/taskDataSet.xsd" xmlns="http://tempuri.org/taskDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="taskConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="taskConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Task_4_IDE_coursework.Properties.Settings.GlobalReference.Default.taskConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="positionsTableAdapter" GeneratorDataComponentClassName="positionsTableAdapter" Name="positions" UserDataComponentName="positionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="taskConnectionString (Settings)" DbObjectName="task.dbo.positions" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[positions] ([workerid], [position]) VALUES (@workerid, @position)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@workerid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="workerid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@position" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="position" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT workerid, position FROM dbo.positions</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="workerid" DataSetColumn="workerid" />
              <Mapping SourceColumn="position" DataSetColumn="position" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="salariesTableAdapter" GeneratorDataComponentClassName="salariesTableAdapter" Name="salaries" UserDataComponentName="salariesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="taskConnectionString (Settings)" DbObjectName="task.dbo.salaries" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[salaries] ([workerid], [salary]) VALUES (@workerid, @salary)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@workerid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="workerid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@salary" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT workerid, salary FROM dbo.salaries</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="workerid" DataSetColumn="workerid" />
              <Mapping SourceColumn="salary" DataSetColumn="salary" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="workersTableAdapter" GeneratorDataComponentClassName="workersTableAdapter" Name="workers" UserDataComponentName="workersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="taskConnectionString (Settings)" DbObjectName="task.dbo.workers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[workers] WHERE (([workerid] = @Original_workerid) AND ((@IsNull_workername = 1 AND [workername] IS NULL) OR ([workername] = @Original_workername)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_workerid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="workerid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_workername" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="workername" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_workername" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="workername" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[workers] ([workerid], [workername]) VALUES (@workerid, @workername);
SELECT workerid, workername FROM workers WHERE (workerid = @workerid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@workerid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="workerid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@workername" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="workername" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT workerid, workername FROM dbo.workers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[workers] SET [workerid] = @workerid, [workername] = @workername WHERE (([workerid] = @Original_workerid) AND ((@IsNull_workername = 1 AND [workername] IS NULL) OR ([workername] = @Original_workername)));
SELECT workerid, workername FROM workers WHERE (workerid = @workerid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@workerid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="workerid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@workername" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="workername" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_workerid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="workerid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_workername" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="workername" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_workername" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="workername" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="workerid" DataSetColumn="workerid" />
              <Mapping SourceColumn="workername" DataSetColumn="workername" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="taskDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="taskDataSet" msprop:Generator_UserDSName="taskDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="positions" msprop:Generator_TableClassName="positionsDataTable" msprop:Generator_TableVarName="tablepositions" msprop:Generator_TablePropName="positions" msprop:Generator_RowDeletingName="positionsRowDeleting" msprop:Generator_RowChangingName="positionsRowChanging" msprop:Generator_RowEvHandlerName="positionsRowChangeEventHandler" msprop:Generator_RowDeletedName="positionsRowDeleted" msprop:Generator_UserTableName="positions" msprop:Generator_RowChangedName="positionsRowChanged" msprop:Generator_RowEvArgName="positionsRowChangeEvent" msprop:Generator_RowClassName="positionsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="workerid" msprop:Generator_ColumnVarNameInTable="columnworkerid" msprop:Generator_ColumnPropNameInRow="workerid" msprop:Generator_ColumnPropNameInTable="workeridColumn" msprop:Generator_UserColumnName="workerid" type="xs:int" minOccurs="0" />
              <xs:element name="position" msprop:Generator_ColumnVarNameInTable="columnposition" msprop:Generator_ColumnPropNameInRow="position" msprop:Generator_ColumnPropNameInTable="positionColumn" msprop:Generator_UserColumnName="position" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="salaries" msprop:Generator_TableClassName="salariesDataTable" msprop:Generator_TableVarName="tablesalaries" msprop:Generator_TablePropName="salaries" msprop:Generator_RowDeletingName="salariesRowDeleting" msprop:Generator_RowChangingName="salariesRowChanging" msprop:Generator_RowEvHandlerName="salariesRowChangeEventHandler" msprop:Generator_RowDeletedName="salariesRowDeleted" msprop:Generator_UserTableName="salaries" msprop:Generator_RowChangedName="salariesRowChanged" msprop:Generator_RowEvArgName="salariesRowChangeEvent" msprop:Generator_RowClassName="salariesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="workerid" msprop:Generator_ColumnVarNameInTable="columnworkerid" msprop:Generator_ColumnPropNameInRow="workerid" msprop:Generator_ColumnPropNameInTable="workeridColumn" msprop:Generator_UserColumnName="workerid" type="xs:int" minOccurs="0" />
              <xs:element name="salary" msprop:Generator_ColumnVarNameInTable="columnsalary" msprop:Generator_ColumnPropNameInRow="salary" msprop:Generator_ColumnPropNameInTable="salaryColumn" msprop:Generator_UserColumnName="salary" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="workers" msprop:Generator_TableClassName="workersDataTable" msprop:Generator_TableVarName="tableworkers" msprop:Generator_TablePropName="workers" msprop:Generator_RowDeletingName="workersRowDeleting" msprop:Generator_RowChangingName="workersRowChanging" msprop:Generator_RowEvHandlerName="workersRowChangeEventHandler" msprop:Generator_RowDeletedName="workersRowDeleted" msprop:Generator_UserTableName="workers" msprop:Generator_RowChangedName="workersRowChanged" msprop:Generator_RowEvArgName="workersRowChangeEvent" msprop:Generator_RowClassName="workersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="workerid" msprop:Generator_ColumnVarNameInTable="columnworkerid" msprop:Generator_ColumnPropNameInRow="workerid" msprop:Generator_ColumnPropNameInTable="workeridColumn" msprop:Generator_UserColumnName="workerid" type="xs:int" />
              <xs:element name="workername" msprop:Generator_ColumnVarNameInTable="columnworkername" msprop:Generator_ColumnPropNameInRow="workername" msprop:Generator_ColumnPropNameInTable="workernameColumn" msprop:Generator_UserColumnName="workername" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:workers" />
      <xs:field xpath="mstns:workerid" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__positions__worke__3C69FB99" msdata:parent="workers" msdata:child="positions" msdata:parentkey="workerid" msdata:childkey="workerid" msprop:Generator_UserChildTable="positions" msprop:Generator_ChildPropName="GetpositionsRows" msprop:Generator_UserRelationName="FK__positions__worke__3C69FB99" msprop:Generator_RelationVarName="relationFK__positions__worke__3C69FB99" msprop:Generator_UserParentTable="workers" msprop:Generator_ParentPropName="workersRow" />
      <msdata:Relationship name="FK__salaries__worker__3A81B327" msdata:parent="workers" msdata:child="salaries" msdata:parentkey="workerid" msdata:childkey="workerid" msprop:Generator_UserChildTable="salaries" msprop:Generator_ChildPropName="GetsalariesRows" msprop:Generator_UserRelationName="FK__salaries__worker__3A81B327" msprop:Generator_RelationVarName="relationFK__salaries__worker__3A81B327" msprop:Generator_UserParentTable="workers" msprop:Generator_ParentPropName="workersRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>